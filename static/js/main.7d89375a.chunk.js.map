{"version":3,"sources":["components/firstComponent.jsx","components/anotherComponent.jsx","components/compComplexLevelThree.jsx","components/fourthComponent.jsx","components/errorBoundary.jsx","components/counter.jsx","components/tryJSONstringify.jsx","components/counterList.jsx","components/crushingComponent.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["FirstComponent","state","count","imageUrl","tags","key","value","incrementCount","console","log","setState","style","backgroundColor","this","map","tag","src","alt","className","getCountClassName","formatCount","onClick","classes","Component","AnotherComponent","address","country","city","streetName","streetNumber","flatNumber","styles","fontSize","fontWeight","Fragment","CompComplexLevelThree","length","textAlign","borderStyle","borderWidth","borderCollapse","borderRadius","renderTags","FourthComponent","incrementCountArrowFunction","printLocationAndMessage","doIncrement","eventObj","callDoIncrement","id","bind","option","args","location","functionName","message","object","messageCollection","getDivStyle","getFormattedCount","getButtonIncrementClassName","href","ErrorBoundary","props","error","undefined","errorInfo","componentDidCatch","i","warn","isError","background","children","e","Counter","createProps","getPropsClassName","JSON","stringify","getPropsWithoutChildren","Object","keys","propKey","badgeM2","stringToAppendBy","margin","getCounterParagraphStyle","propsWithoutChildren","ComponentList","counters","getId","createCounters","counter","selected","CrushingComponent","jsError","crushCount","handleClick","event","getButtonClassName","getButtonStyle","display","Error","App","logo","target","rel","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7d89375a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class FirstComponent extends Component {\n  state = {\n    count: 0,\n    imageUrl: \"https://picsum.photos/200\", // random image 200x200 px\n    tags: [\n      { key: \"0\", value: \"tag1\" },\n      { key: \"1\", value: \"tag2\" },\n      { key: \"2\", value: \"tag3\" }\n    ]\n  };\n  render() {\n    return (\n      <div style={{ backgroundColor: \"deepskyblue\" }}>\n        <h1>Counter</h1>\n        <p>\n          Counter's count field changes color and prints 'Zero' instead of '0'\n        </p>\n        <p>Also Counter uses className=\"...\" property</p>\n        <ul>\n          {this.state.tags.map(tag => (\n            <li key={tag.key}> {tag.value} </li>\n          ))}\n        </ul>\n        <img src={this.state.imageUrl} alt=\"\" /> <br />\n        <span className={this.getCountClassName()}>\n          count: {this.formatCount()}\n        </span>\n        <button onClick={this.incrementCount}>Increment</button>\n      </div>\n    );\n  }\n\n  incrementCount = () => {\n    console.log(\"#1 Incremented count. this.state.count = \" + this.state.count);\n    this.setState({ count: this.state.count + 1 });\n    console.log(\"#2 Incremented count. this.state.count = \" + this.state.count);\n  };\n\n  getCountClassName() {\n    let classes = \"badge m-2\";\n    classes += \" \";\n    classes += this.state.count === 0 ? \"badge-warning\" : \"badge-primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? <strong>Zero</strong> : count;\n  }\n}\n","import React, { Component } from \"react\";\nclass AnotherComponent extends Component {\n  state = {\n    count: 0,\n    address: {\n      country: \"unsetCountry\",\n      city: \"unsetCity\",\n      streetName: \"unsetStreetName\",\n      streetNumber: null,\n      flatNumber: null\n    }\n  };\n\n  styles = {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2>Another Component</h2>\n        <p>AnotherComponent has static style with 2 ways to assigning style</p>\n        <span style={this.styles} className=\"badge badge-primary m-2\">\n          count: {this.formatCount()}\n        </span>\n        <button style={{ fontSize: 38 }} className=\"btn btn-secondary btn-sm\">\n          Another Increment\n        </button>\n        <br />\n      </React.Fragment>\n    );\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? <strong>Zero</strong> : count;\n  }\n}\n\nexport default AnotherComponent;\n","import React, { Component } from \"react\";\n\nclass CompComplexLevelThree extends Component {\n  state = {\n    count: 0,\n    tags: [\n      // { key: \"0\", value: \"tag1\" },\n      // { key: \"1\", value: \"tag2\" },\n      // { key: \"2\", value: \"tag3\" }\n    ]\n  };\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n    else {\n      return (\n        <ul>\n          {this.state.tags.map(tag => (\n            <li key={tag.key}> {tag.value} </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            textAlign: \"center\",\n            borderStyle: \"solid\",\n            borderWidth: \"2px\",\n            borderCollapse: \"collapse\",\n            borderRadius: \"20px\",\n            backgroundColor: \"deepskyblue\"\n          }}\n        >\n          <h3> JavaScript property </h3>\n          <strong> 'Hello' (not empty) ==> Truthy </strong> <br />\n          <strong> '' (empty) ==> Falsy </strong> <br />\n          <strong> 1 (not zero) ==> Truthy </strong> <br />\n          <strong> 0 (zero) ==> Falsy </strong> <br />\n          <p>\n            true && \"Hello\": \"{true && \"Hello\"}\" <br />\n            false && \"Hello\": \"{false && \"Hello\"}\" <br />\n            true && \"\": \"{true && \"\"}\" <br />\n            false && \"\": \"{false && \"\"}\" <br />\n            true && 0: \"{true && 0}\" <br />\n            false && 0: \"{false && 0}\" <br />\n            true && 1245: \"{true && 1245}\" <br />\n            false && -1245: \"{false && -1245}\" <br />\n          </p>\n        </div>\n        <div\n          style={{\n            textAlign: \"center\",\n            borderStyle: \"solid\",\n            borderWidth: \"2px\",\n            borderCollapse: \"collapse\",\n            borderRadius: \"20px\",\n            backgroundColor: \"deepskyblue\"\n          }}\n        >\n          {this.state.tags.length === 0 && <p>Please create a new tag.</p>}\n          {this.renderTags()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CompComplexLevelThree;\n","import React, { Component } from \"react\";\n\nclass FourthComponent extends Component {\n  state = {\n    count: 0,\n    tags: [\n      // { key: \"0\", value: \"tag1\" },\n      // { key: \"1\", value: \"tag2\" },\n      // { key: \"2\", value: \"tag3\" }\n    ]\n  };\n\n  constructor() {\n    super();\n    console.log(\"Constructor >>> this = \", this); // undefined without bind()\n    this.incrementCount = this.incrementCount.bind(this);\n  }\n\n  messageCollection(option, args) {\n    console.log(\n      {\n        location: `${args[0]} >>> ${args[1]}: ${args[2]}`\n      }[option]\n    );\n  }\n\n  printLocationAndMessage(className, functionName, message, object) {\n    if (object || object !== 0 || object !== \"\")\n      console.log(`${className} >>> ${functionName}: ${message}`, object);\n    else console.log(`${className} >>> ${functionName}: ${message}`);\n  }\n\n  incrementCount() {\n    console.log(\"fourthComponent >>> incrementCount(): Increment clicked\");\n    console.log(\"fourthComponent >>> incrementCount(): this = \", this); // not undefined\n    console.log(\n      \"fourthComponent >>> incrementCount(): #1 this.state.count = \",\n      this.state.count\n    ); // error without bind()\n    this.setState({ count: this.state.count + 1 }); // error without bind()\n    console.log(\n      `fourthComponent >>> incrementCount(): #2 this.state.count = ${this.state.count}`\n    ); // error without bind()\n    this.messageCollection(\"location\", [\n      \"fourthComponent\",\n      \"incrementCount()\",\n      \"#3 this.state.count = \" + this.state.count\n    ]);\n  }\n\n  incrementCountArrowFunction = () => {\n    this.printLocationAndMessage(\n      \"fourthComponent\",\n      \"incrementCountArrowFunction()\",\n      \"Increment clicked!\"\n    );\n    this.printLocationAndMessage(\n      \"fourthComponent\",\n      \"incrementCountArrowFunction()\",\n      \"this = \",\n      this\n    );\n    // NOT undefined\n    // it's arrow function so it doesn't need bind\n    this.printLocationAndMessage(\n      \"fourthComponent\",\n      \"incrementCountArrowFunction()\",\n      \"#1 this.state.count = \",\n      this.state.count\n    );\n    // NOT undefined\n    // it's arrow function so it doesn't need bind\n    this.setState({ count: this.state.count + 1 });\n    // NOT undefined\n    // it's arrow function so it doesn't need bind\n    this.printLocationAndMessage(\n      \"fourthComponent\",\n      \"incrementCountArrowFunction()\",\n      \"#2 this.state.count = \",\n      this.state.count\n    );\n    // NO error\n    // it's arrow function so it doesn't need bind\n  };\n\n  doIncrement = eventObj => {\n    this.printLocationAndMessage(\n      \"fourthComponent\",\n      \"doIncrement()\",\n      \"eventObj = \",\n      eventObj\n    );\n  };\n\n  callDoIncrement = () => {\n    this.doIncrement({ id: 1 });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2>Fourth Component</h2>\n        <div style={this.getDivStyle()}>\n          <span className={this.getCountClassName()}>\n            {this.getFormattedCount()}\n          </span>\n          <button\n            onClick={this.incrementCount}\n            className={this.getButtonIncrementClassName()}\n          >\n            Increment - bind() this to function in constructor\n          </button>\n          <button\n            onClick={this.incrementCountArrowFunction}\n            className={this.getButtonIncrementClassName()}\n          >\n            Increment - arrow Function\n          </button>\n          <br />\n          <button\n            onClick={this.callDoIncrement}\n            className={this.getButtonIncrementClassName()}\n          >\n            Increment - arrow Function - passing argument - def function inside\n            a function\n          </button>\n          <button\n            onClick={() => {\n              this.doIncrement({ id: 1 });\n            }}\n            className={this.getButtonIncrementClassName()}\n          >\n            Increment - arrow Function - passing argument - inline function\n            inside a function\n          </button>\n          <br />\n          <span>\n            Last lesson done:\n            <a href={\"https://www.youtube.com/watch?v=Ke90Tje7VS0&t=4567\"}>\n              1:16:07\n            </a>\n          </span>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getDivStyle() {\n    return {\n      textAlign: \"center\",\n      borderStyle: \"solid\",\n      borderWidth: \"2px\",\n      borderCollapse: \"collapse\",\n      borderRadius: \"20px\",\n      backgroundColor: \"deepskyblue\"\n    };\n  }\n\n  getCountClassName() {\n    let classes = \"badge m-2\";\n    classes += \" \";\n    classes += this.state.count === 0 ? \"badge-warning\" : \"badge-primary\";\n    return classes;\n  }\n\n  getButtonIncrementClassName() {\n    return \"btn btn-secondary btn-sm m-2\";\n  }\n\n  getFormattedCount() {\n    const { count } = this.state;\n    return count === 0 ? <strong>Zero</strong> : count;\n  }\n}\n\nexport default FourthComponent;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: undefined,\n    errorInfo: undefined\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  render() {\n    if (this.isError()) {\n      console.warn(`this.isError() = ${this.isError()}`);\n      let renderedErrorPage = (\n        <div style={{ background: \"red\" }}>\n          <h1>Error</h1>\n          <h2>Error:</h2>\n          <h2>ErrorInfo:</h2>\n        </div>\n      );\n      return renderedErrorPage;\n    } else {\n      console.warn(`this.isError() = ${this.isError()}`);\n      try {\n        let renderedChildren = this.props.children;\n        return renderedChildren;\n      } catch (e) {\n        for (let i = 0; i < 20; i++) {\n          console.warn(\n            `Caught error at ErrorBoundary class >>> render() >>> return.this.props.children.\\n\\rerror:${e}`\n          );\n        }\n      }\n    }\n  }\n\n  componentDidCatch = (error, errorInfo) => {\n    for (let i = 0; i < 10; i++) {\n      console.warn(`#${i} CAUGHT #${i}`);\n    }\n\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  };\n\n  isError = () => {\n    if (this.state.error) return true;\n    else return false;\n  };\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport TryJSONstringify from \"./tryJSONstringify\";\n\nclass Counter extends Component {\n  state = {\n    count: this.props.count\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div style={this.getDivStyle()}>\n          <p style={this.getCounterParagraphStyle()}>\n            <span className={this.getCountClassName()}>\n              count: {this.formatCount()}\n            </span>\n            <button onClick={this.incrementCount}>Increment</button>\n          </p>\n          {this.createProps()}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  incrementCount = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  getCountClassName() {\n    let classes = \"badge m-2\";\n    classes += \" \";\n    classes += this.state.count === 0 ? \"badge-warning\" : \"badge-primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? <strong>Zero</strong> : count;\n  }\n\n  createProps = () => {\n    return (\n      <React.Fragment>\n        <span className={this.getPropsClassName()[0]}>{\"Props:\"} </span>\n        <span className={this.getPropsClassName()[1]}>\n          {\"this.tryJSONstringify( this.props ):\"}\n        </span>\n        {/*<TryJSONstringify object={this.props} />*/}\n        <br />\n        <span className={this.getPropsClassName()[0]}>\n          {\"Props without children:\"}\n        </span>\n        <span className={this.getPropsClassName()[1]}>\n          {\"JSON.stringify(this.getPropsWithoutChildren())\"}\n        </span>\n        <span className={this.getPropsClassName()[2]}>\n          {JSON.stringify(this.getPropsWithoutChildren())}\n        </span>\n        <br />\n        <span className={this.getPropsClassName()[0]}> {\"Props:\"} </span>\n        <span className={this.getPropsClassName()[1]}>\n          {\"{Object.keys(this.props).map(\\n\" +\n            \"            (propKey, i) => ` ${i}. { ${propKey}: ${this.props[propKey]} },`\\n\" +\n            \"          )}:\"}\n        </span>\n        <span className={this.getPropsClassName()[2]}>\n          {Object.keys(this.props).map(\n            (propKey, i) => ` ${i}. { ${propKey}: ${this.props[propKey]} },`\n          )}\n        </span>\n      </React.Fragment>\n    );\n  };\n\n  getPropsClassName() {\n    return [\n      this.badgeM2(\" badge-warning\"),\n      this.badgeM2(\" badge-primary\"),\n      this.badgeM2(\" badge-secondary\")\n    ];\n  }\n\n  badgeM2 = stringToAppendBy => `badge m-2${stringToAppendBy}`;\n\n  getDivStyle = () => {\n    return {\n      textAlign: \"center\",\n      borderStyle: \"hidden\",\n      borderRadius: \"20px\",\n      margin: \"2px\",\n      backgroundColor: \"deepSkyBlue\"\n    };\n  };\n\n  getCounterParagraphStyle = () => {\n    return {\n      borderStyle: \"hidden\",\n      borderRadius: \"20px\",\n      margin: \"0px\",\n      backgroundColor: \"royalBlue\"\n    };\n  };\n\n  getPropsWithoutChildren = () => {\n    if (this.props) {\n      let propsWithoutChildren = {};\n      Object.keys(this.props).map((propKey, i) => {\n        if (propKey !== \"children\") {\n          propsWithoutChildren[propKey] = this.props[propKey];\n        }\n        return propsWithoutChildren;\n      });\n      return propsWithoutChildren;\n    } else console.warn(\"!this.props\");\n    return;\n  };\n}\n\nexport default Counter;\n","import Stringify from \"react-stringify\";\nimport React, { Component } from \"react\";\nimport ErrorBoundary from \"./errorBoundary\";\n\nclass TryJSONstringify extends Component {\n  state = {\n    objectToStringify: undefined,\n    errorBoundaryComponent: undefined\n  };\n\n  constructor(props) {\n    super(props);\n    this.state.objectToStringify = this.props.object;\n    this.state.errorBoundaryComponent = React.createRef();\n  }\n\n  componentDidMount = () => {\n    try {\n      console.log(\n        \"this.state.errorBoundaryComponent: \",\n        this.state.errorBoundaryComponent\n      );\n      console.log(\n        \"this.state.errorBoundaryComponent.current.isError(): \",\n        this.state.errorBoundaryComponent.current.isError()\n      );\n    } catch (e) {\n      // throw new Error(\n      //   `this.state.errorBoundaryComponent: ${this.state.errorBoundaryComponent}`\n      // );\n      console.warn(\n        \"this.state.errorBoundaryComponent:\",\n        this.state.errorBoundaryComponent\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {\"this.stringify(): \"} {this.stringify()} <br />\n        {\"this.tryJSONstringify(): \"}\n        {/*{this.tryJSONstringify()}*/}\n        <br />\n      </React.Fragment>\n    );\n  }\n\n  stringify = () => {\n    if (!this.state.objectToStringify)\n      throw new Error(\"!this.state.objectToStringify\");\n    let errorBoundStringifyComponent = (\n      <ErrorBoundary ref={this.state.errorBoundaryComponent}>\n        <Stringify value={this.state.objectToStringify} />\n      </ErrorBoundary>\n    );\n    return errorBoundStringifyComponent;\n  };\n\n  tryJSONstringify = () => {\n    try {\n      if (\n        this.state.errorBoundaryComponent &&\n        this.state.errorBoundaryComponent.current &&\n        !this.state.errorBoundaryComponent.current.isError()\n      ) {\n        console.log(\n          \"TRUTHY = this.state.errorBoundaryComponent.current.isError()\",\n          this.state.errorBoundaryComponent.current.isError()\n        );\n        console.log(`SUCCESS: Could <Stringify value={this.props.object} />`);\n        // https://www.npmjs.com/package/react-stringify?activeTab=readme#examples\n        return;\n      } else {\n        console.log(\"FALSE FALSY FALSY\");\n        console.log(\n          \"FALSY = this.state.errorBoundaryComponent\",\n          this.state.errorBoundaryComponent\n        );\n        console.log(\n          \"FALSY = this.state.errorBoundaryComponent.current\",\n          this.state.errorBoundaryComponent.current\n        );\n        console.log(\n          \"FALSY = this.state.errorBoundaryComponent.current.isError()\",\n          this.state.errorBoundaryComponent.current.isError()\n        );\n        throw new Error(\n          \"Skipping Strigify Component - doesn't work for this.props.children.\"\n        );\n      }\n    } catch (error1) {\n      console.warn(\n        `FAILURE: Could NOT <Stringify value={this.props.object} />.\\n\\rError#1: ${error1}`\n      );\n      try {\n        let stringifiedObject = JSON.stringify(this.state.objectToStringify);\n        console.log(\"#2 object: \", this.state.objectToStringify);\n        return (\n          <span className={this.getPropsClassName()[2]}>\n            {stringifiedObject}\n          </span>\n        );\n      } catch (error2) {\n        console.log(\"#3\");\n        return (\n          <span className={this.getPropsClassName()[2]}>\n            {`FAILURE: Could not JSON.stringify( object ).\\n\\rError#1: ${error1}\\n\\rError#2: ${error2}`}\n          </span>\n        );\n      }\n    }\n  };\n\n  getPropsClassName() {\n    return [\n      this.badgeM2(\" badge-warning\"),\n      this.badgeM2(\" badge-primary\"),\n      this.badgeM2(\" badge-secondary\")\n    ];\n  }\n\n  badgeM2 = stringToAppendBy => `badge m-2${stringToAppendBy}`;\n}\n\nexport default TryJSONstringify;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass ComponentList extends Component {\n  state = {\n    id: \"ComponentList\",\n    counters: [\n      { id: 1, count: 5 },\n      { id: 2, count: 4 },\n      { id: 3, count: 3 },\n      { id: 4, count: 2 },\n      { id: 5, count: 1 },\n      { id: 6, count: 0 }\n    ]\n  };\n\n  getId = () => {\n    return this.state.id;\n  };\n\n  getDivStyle = () => {\n    return {\n      textAlign: \"center\",\n      borderStyle: \"solid\",\n      borderWidth: \"2px\",\n      borderCollapse: \"collapse\",\n      borderRadius: \"20px\",\n      backgroundColor: \"dodgerBlue\"\n    };\n  };\n\n  render() {\n    return (\n      <div id={this.getId()} style={this.getDivStyle()}>\n        {this.createCounters()}\n        <Counter count={10} selected={false} id={10}>\n          <h1>This counter is statically added to counter list</h1>\n          <h2>It isn't self-closed</h2>\n          <h3>It has something between opening and closing tag of element</h3>\n          <h4>This should modified this.props.children</h4>\n        </Counter>\n      </div>\n    );\n  }\n\n  createCounters = () => {\n    return this.state.counters.map(counter => (\n      <Counter\n        key={counter.id}\n        count={counter.count}\n        selected={true}\n        id={counter.id}\n      />\n    ));\n  };\n}\nexport default ComponentList;\n","import React, { Component } from \"react\";\n\nclass CrushingComponent extends Component {\n  state = {\n    count: 0,\n    jsError: undefined\n  };\n\n  crushCount = () => {\n    return 3;\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  handleClick = event => {\n    try {\n      this.setState(({ count }) => ({ count: count + 1 }));\n    } catch (e) {\n      for (let i = 0; i < 20; i++) {\n        console.warn(\n          `Caught error at CrushingComponent class >>> handleClick() >>> this.setState(...).\\n\\rerror:${e}`\n        );\n        this.setState(({ jsError: jsErrorValue }) => ({ jsError: e }));\n      }\n    }\n  };\n\n  getButtonClassName = () => {\n    return \"btn btn-danger\";\n  };\n\n  getButtonStyle = () => {\n    return {\n      display: \"block\",\n      margin: \"0 auto\"\n    };\n  };\n\n  render() {\n    if (this.state.jsError) return <h1>Something went wrong.</h1>;\n    else {\n      if (this.state.count >= this.crushCount()) {\n        throw new Error(\n          `Button crushed at this.state.count = ${this.state.count}`\n        );\n      }\n      return (\n        <React.Fragment>\n          <button\n            onClick={this.handleClick}\n            className={this.getButtonClassName()}\n            style={this.getButtonStyle()}\n          >{`This button crushes at count = ${this.crushCount()}. Current count = ${\n            this.state.count\n          }`}</button>\n          <br />\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default CrushingComponent;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport FirstComponent from \"./components/firstComponent\";\nimport AnotherComponent from \"./components/anotherComponent\";\nimport CompComplexLevelThree from \"./components/compComplexLevelThree\";\nimport FourthComponent from \"./components/fourthComponent\";\nimport CounterList from \"./components/counterList\";\nimport ErrorBoundary from \"./components/errorBoundary\";\nimport CrushingComponent from \"./components/crushingComponent\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        This is inside div className = \"App\" \\/\\/\\/\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <FirstComponent />\n        This is inside div className = \"App\" /\\/\\/\\\n      </div>\n      This is ouside of div className = \"App\" \\/\\/\\/ <br />\n      It's inside React.Fragment \\/\\/\\/\n      <AnotherComponent />\n      <CompComplexLevelThree />\n      <FourthComponent />\n      <CounterList />\n      <ErrorBoundary>\n        <CrushingComponent />\n      </ErrorBoundary>\n      This is ouside of div className = \"App\" /\\/\\/\\ <br />\n      It's inside React.Fragment /\\/\\/\\\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}